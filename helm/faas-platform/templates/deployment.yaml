apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "faas-platform.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "faas-platform.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "faas-platform.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "faas-platform.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
{{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
    spec:
      serviceAccountName: {{ include "faas-platform.serviceAccountName" . }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
      containers:
        - name: api
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 8080
              name: http
          securityContext:
            allowPrivilegeEscalation: false
          {{- $secretName := "" -}}
          {{- if .Values.secrets.existingSecret }}
          {{- $secretName = .Values.secrets.existingSecret -}}
          {{- else if and .Values.secrets.create .Values.secrets.name }}
          {{- $secretName = .Values.secrets.name -}}
          {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "faas-platform.fullname" . }}-env
            {{- if $secretName }}
            - secretRef:
                name: {{ $secretName }}
            {{- end }}
          env:
{{- if .Values.extraEnv }}
{{ toYaml .Values.extraEnv | indent 12 }}
{{- end }}
          resources:
{{- if .Values.resources }}
{{ toYaml .Values.resources | indent 12 }}
{{- else }} {}
{{- end }}
